{
  "permissions": {
    "allow": [
      "Bash(npm init -y)",
      "Bash(npm install)",
      "Bash(npx prisma:*)",
      "Bash(npm run db:seed:*)",
      "Bash(npm run test:*)",
      "Bash(npx tsc:*)",
      "Bash(npx tsx:*)",
      "Read(//c/Users/LEGION/projets/instructoria-mcp-server/src/services/**)",
      "Read(//c/Users/LEGION/projets/instructoria-mcp-server/src/**)",
      "Read(//c/Users/LEGION/projets/instructoria-mcp-server/examples/**)",
      "Read(//c/Users/LEGION/projets/instructoria-mcp-server/**)",
      "Bash(az account:*)",
      "Bash(powershell:*)",
      "Bash(az group create:*)",
      "Bash(az storage account create:*)",
      "Bash(az storage container create:*)",
      "Bash(az cosmosdb create:*)",
      "Bash(az storage account show-connection-string:*)",
      "Bash(az cosmosdb sql database create:*)",
      "Bash(az cosmosdb show:*)",
      "Bash(az cosmosdb keys list:*)",
      "Bash(az cosmosdb sql container create:*)",
      "Bash(npm run build)",
      "Bash(npm run dev)",
      "Bash(npm install:*)",
      "Bash(PORT=8080 npm start)",
      "Bash(timeout:*)",
      "Bash(curl:*)",
      "Bash(az acr create:*)",
      "Bash(az acr credential show:*)",
      "Bash(az acr login:*)",
      "Bash(az acr build:*)",
      "Bash(az container create:*)",
      "Bash(az provider register:*)",
      "Bash(az provider show:*)",
      "Bash(taskkill:*)",
      "Bash(git checkout:*)",
      "Bash(npx shadcn@latest init:*)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(test -f \"c:\\Users\\LEGION\\projets\\instructoria\\src\\lib\\utils.ts\")",
      "Bash(if exist .next rmdir /s /q .next)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(dir:*)",
      "Bash(az:*)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(git remote remove:*)",
      "Bash(node -e \"console.log(require(''crypto'').randomBytes(32).toString(''base64''))\")",
      "Bash(git fetch:*)",
      "Bash(node fix-vercel-routes.js)",
      "Bash(cat:*)",
      "Bash(test:*)",
      "Bash(npm run lint:*)",
      "Bash(pkill -f \"npm run lint\")",
      "Bash(lsof:*)",
      "Bash(xargs kill -9)",
      "Bash(pkill:*)",
      "Bash(npm version:*)"
    ],
    "deny": [],
    "ask": []
  }
}
