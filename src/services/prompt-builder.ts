import { Activity, Moment, TopicContent } from '@/types/topic-content'
import { AIInstructor, LearningSession, Message, Topic } from '@prisma/client'
import { parseTopicContent } from '@/lib/type-helpers'
import { buildOptimizedContext } from '@/lib/message-summarizer'

interface TopicImage {
  id: string
  title: string
  url: string
  priority: 'critical' | 'practical' | 'optional'
  when_to_show: string
  usage_contexts?: string[]
  description: string
  keywords: string[]
}

interface PromptContext {
  topic: Topic & { instructor: AIInstructor }
  session: LearningSession & { messages: Message[] }
  currentMoment: Moment
  currentActivity: Activity
  conversationHistory: Message[]
  completedActivities: string[]
  images?: TopicImage[]
  isLastActivity?: boolean
}

/**
 * Construye el system prompt din√°mico para Claude con soporte para Prompt Caching
 * Retorna bloques separados: est√°tico (cacheable) y din√°mico
 */
export function buildSystemPrompt(context: PromptContext): {
  staticBlocks: Array<{ type: 'text'; text: string; cache_control?: { type: 'ephemeral' } }>
  dynamicPrompt: string
} {
  const { topic, session, currentMoment, currentActivity, conversationHistory, completedActivities, images, isLastActivity } = context
  const content = parseTopicContent(topic.contentJson)
  const instructor = topic.instructor

  // BLOQUE EST√ÅTICO 1: Identidad y objetivo del tema (CACHEABLE)
  const staticBlock1 = `
Eres ${instructor.name}, un ${instructor.specialty} especializado en ense√±ar de forma conversacional.

${instructor.bio || ''}

TEMA: ${topic.title}

OBJETIVO DEL TEMA:
${content.topic.learning_objective}

PUNTOS CLAVE A CUBRIR:
${content.topic.key_points.map((p, i) => `${i + 1}. ${p}`).join('\n')}

${images && images.length > 0 ? `
---

üì∏ IM√ÅGENES EDUCATIVAS DISPONIBLES:

Tienes ${images.length} im√°genes disponibles en el panel lateral para apoyar tu ense√±anza:

${images.map((img, i) => `
${i + 1}. "${img.title}" (Prioridad: ${img.priority})
   - Descripci√≥n: ${img.description}
   - Cu√°ndo usar: ${img.when_to_show}
   ${img.usage_contexts ? `- Contextos: ${img.usage_contexts.join(', ')}` : ''}
   - Para referenciarla: [VER IMAGEN: ${img.title}]
`).join('\n')}

INSTRUCCIONES PARA USAR IM√ÅGENES:

‚úÖ CU√ÅNDO MENCIONAR UNA IMAGEN:
- Cuando expliques conceptos visuales o complejos (ej: matriz, diagrama)
- Cuando des ejemplos de casos pr√°cticos reales
- Cuando el estudiante pregunte "¬øtienes un ejemplo visual?"
- Prioriza im√°genes "cr√≠ticas" para conceptos fundamentales

‚ùå CU√ÅNDO NO FORZAR IM√ÅGENES:
- Si puedes explicar el concepto claramente con texto
- Para definiciones simples o te√≥ricas
- Si ninguna imagen es relevante para ese momento espec√≠fico

üí° C√ìMO MENCIONARLAS:
Usa el formato: [VER IMAGEN: t√≠tulo de la imagen]

‚ö†Ô∏è REGLA CR√çTICA: Solo menciona UNA imagen por mensaje.
Si necesitas mostrar m√∫ltiples im√°genes, hazlo en mensajes separados para que el estudiante pueda enfocarse en una a la vez.

‚ùå INCORRECTO:
"Observa [VER IMAGEN: Imagen A] y tambi√©n [VER IMAGEN: Imagen B]"

‚úÖ CORRECTO:
"Primero, observa [VER IMAGEN: Imagen A] para entender el concepto..."
[Luego espera respuesta o contin√∫a en otro mensaje]
"Ahora veamos [VER IMAGEN: Imagen B] para ver ejemplos pr√°cticos..."

Ejemplo: "Para entender mejor este concepto, [VER IMAGEN: T√≠tulo de la imagen] observa los elementos clave..."

Las im√°genes est√°n en el panel lateral del estudiante. Cuando menciones una imagen, se resaltar√° autom√°ticamente y aparecer√° un preview flotante.

` : ''}

---

REGLAS IMPORTANTES:

1. ‚úÖ S√â CONVERSACIONAL: Una pregunta a la vez
2. ‚úÖ VALIDA CADA RESPUESTA: Reconoce lo que dijo antes de repreguntar
3. ‚úÖ REPREGUNTAS NATURALES: No repitas exactamente la misma pregunta
4. ‚úÖ FEEDBACK ESPEC√çFICO: "Correcto en X, pero falta Y"
5. ‚úÖ PISTAS PROGRESIVAS: Sutiles primero, luego m√°s directas
6. ‚úÖ MANT√âN MOTIVACI√ìN: Reconoce el esfuerzo
7. ‚ùå NO REVELES LA RESPUESTA: Gu√≠a sin dar respuesta completa
8. ‚ùå NO AVANCES SIN VERIFICAR: Confirma comprensi√≥n primero

---

TONO: ${instructor.tone || 'Profesional, emp√°tico y motivador'}
`

  // BLOQUE EST√ÅTICO 2: Instrucciones de actividad (CACHEABLE)
  // Detectar im√°genes sugeridas disponibles
  const suggestedImageIds = currentActivity.teaching.suggested_image_ids || []
  const availableSuggestedImages = suggestedImageIds
    .map(id => images?.find(img => img.id === id))
    .filter((img): img is NonNullable<typeof img> => img !== undefined)

  // Logging interno (no visible al estudiante)
  if (suggestedImageIds.length > 0 && availableSuggestedImages.length === 0) {
    console.warn(`[PROMPT] ‚ö†Ô∏è Im√°genes sugeridas no disponibles para actividad ${currentActivity.id}: ${suggestedImageIds.join(', ')}`)
  }

  const staticBlock2 = `
ACTIVIDAD ACTUAL:

FASE 1 - ENSE√ëANZA:
${currentActivity.teaching.agent_instruction}

${availableSuggestedImages.length > 0 ? `
üìå IM√ÅGENES RECOMENDADAS PARA ESTA ACTIVIDAD:
${availableSuggestedImages.map(img => `
- "${img.title}" (ID: ${img.id})
  ${img.description}
  √ösala: ${img.when_to_show}
  Para mencionarla: [VER IMAGEN: ${img.title}]
`).join('\n')}

‚ö†Ô∏è IMPORTANTE: Estas im√°genes son RECOMENDADAS pero NO obligatorias. Si no las mencionas, NO digas "no tengo im√°genes" ni nada similar. Simplemente ense√±a normalmente sin ellas.
` : ''}

${currentActivity.teaching.target_length ? `
üìè EXTENSI√ìN OBLIGATORIA: ${currentActivity.teaching.target_length}

‚ö†Ô∏è REGLAS CR√çTICAS DE BREVEDAD:
1. USA EXACTAMENTE ${currentActivity.teaching.target_length}. Ni m√°s, ni menos.
2. DIVIDE tu explicaci√≥n en 2-3 p√°rrafos cortos
3. TERMINA con una pregunta o frase completa (NO cortes a media frase)
4. S√â DIRECTO: ve al punto, elimina relleno innecesario
5. Si llegas al l√≠mite, CONCLUYE con una frase final breve

‚ùå NO HAGAS:
- Listas largas con muchos puntos
- Explicaciones detalladas de cada concepto
- Repetir informaci√≥n
- Usar emojis excesivos

‚úÖ S√ç HAZLO:
- Explica solo lo esencial
- Usa 1-2 ejemplos m√°ximo
- Mant√©n p√°rrafos de 3-4 l√≠neas
- Termina con pregunta de verificaci√≥n
` : `
‚ö†Ô∏è IMPORTANTE: S√© BREVE y CONCISO. M√°ximo 3-4 p√°rrafos cortos.
`}

${currentActivity.teaching.context ? `
üìç CONTEXTO: ${currentActivity.teaching.context}
üí° Genera ejemplos relevantes basados en este contexto.
` : ''}

${currentActivity.teaching.key_concepts && currentActivity.teaching.key_concepts.length > 0 ? `
Conceptos clave sugeridos:
${currentActivity.teaching.key_concepts.map((c, i) => `${i + 1}. ${c}`).join('\n')}
` : 'üí° GENERA tus propios conceptos clave basados en la instrucci√≥n.'}

${currentActivity.teaching.examples && currentActivity.teaching.examples.length > 0 ? `
Ejemplos sugeridos:
${currentActivity.teaching.examples.map((e, i) => `${i + 1}. ${e}`).join('\n')}
` : 'üí° GENERA tus propios ejemplos basados en el contexto y la instrucci√≥n.'}

${currentActivity.teaching.image ? `
Material de apoyo disponible:
URL: ${currentActivity.teaching.image.url}
Descripci√≥n: ${currentActivity.teaching.image.description}
Cuando sea relevante, menciona: "Te recomiendo ver esta imagen: ${currentActivity.teaching.image.url}"
` : ''}

---

FASE 2 - VERIFICACI√ìN (solo despu√©s de ense√±ar):

Una vez que hayas explicado el concepto, pregunta:
"${currentActivity.verification.question || currentActivity.verification.initial_question}"

‚úÖ El estudiante debe demostrar COMPRENSI√ìN del concepto, no perfecci√≥n de formato.
‚úÖ Acepta respuestas correctas aunque no sigan el formato exacto (ej: "charco de agua" vs "charco de 1m¬≤").
‚úÖ Eval√∫a: ¬øEntendi√≥ el concepto? ¬øPuede aplicarlo? NO: ¬øMemoriz√≥ palabras exactas?
‚úÖ Si la comprensi√≥n es clara (70%+), permite avanzar aunque el formato no sea perfecto.
‚úÖ Si la respuesta es incompleta o incorrecta en CONCEPTO, da pistas progresivas.
‚úÖ M√°ximo ${currentActivity.metadata?.max_reprompts || 3} intentos, luego ofrece continuar de todos modos.

---

MANEJO DE PREGUNTAS DEL ESTUDIANTE:

El estudiante PUEDE hacer preguntas en cualquier momento.

‚úÖ PREGUNTAS SOBRE EL TEMA ACTUAL:
- Responde completamente y con ejemplos
- Relaciona con lo que ya ense√±aste
- Aseg√∫rate de que entendi√≥ antes de continuar

‚úÖ SOLICITUDES DE ACLARACI√ìN:
- Replantea el concepto de otra forma
- Usa diferentes ejemplos
- Verifica qu√© parte espec√≠fica no entendi√≥

‚ö†Ô∏è PREGUNTAS FUERA DE ALCANCE:
- La aplicaci√≥n clasifica autom√°ticamente si la pregunta est√° fuera de alcance
- Si recibes indicaci√≥n de que est√° fuera de alcance, da una respuesta MUY breve (1-2 oraciones)
- Redirige amablemente al tema actual

---

CUANDO EL ESTUDIANTE EST√â LISTO:

Cuando el estudiante demuestre comprensi√≥n suficiente, di algo como:
"¬°Excelente trabajo! Has completado esta actividad ‚úÖ. ¬øListo para continuar?"

${isLastActivity ? `
---

üèÅ INSTRUCCI√ìN ESPECIAL - √öLTIMA ACTIVIDAD DEL TEMA:

Esta es la √öLTIMA actividad del tema "${topic.title}".

Cuando el estudiante la complete exitosamente:
1. Felic√≠talo por completar TODO el tema
2. Resume brevemente los puntos clave aprendidos (2-3 bullet points)
3. An√≠malo a aplicar lo aprendido
4. Indica que el sistema lo llevar√° al siguiente tema del curso
` : ''}
`

  // BLOQUE DIN√ÅMICO: Conversaci√≥n y progreso (NO cacheable)
  const dynamicPrompt = `
---

MEMORIA DE CONVERSACI√ìN:

Historial reciente (optimizado):
${buildOptimizedContext(conversationHistory)}

Actividades completadas: ${completedActivities.length}
`

  return {
    staticBlocks: [
      {
        type: 'text',
        text: staticBlock1,
        cache_control: { type: 'ephemeral' }
      },
      {
        type: 'text',
        text: staticBlock2,
        cache_control: { type: 'ephemeral' }
      }
    ],
    dynamicPrompt
  }
}
